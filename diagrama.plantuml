@startuml diagrama
class Utilizador {
  - login: String
  - password: String
  - nome: String
  - estado: String
  - email: String
  - tipo: String
  + Utilizador(login: String, password: String, nome: String, estado: String, email: String, tipo: String)
  + getLogin(): String
  + getPassword(): String
  + getNome(): String
  + getEstado(): String
  + getEmail(): String
  + getTipo(): String
  + setPassword()
  + setNome()
  + setEstado(estado: String)
  + loggedUserLoop(user: Utilizador)
  + registerNewUser(estado: String, type: String): Utilizador
  +alterarDados()
}

class Cliente extends Utilizador {
  - NIF: String
  - morada: String
  - telefone: String
  + Cliente(login: String, password: String, nome: String, estado: String, email: String, tipo: String, NIF: String, morada: String, telefone: String)
  + getNIF(): String
  + getMorada(): String
  + getTelefone(): String
  + setMorada()
  + loggedUserLoop(user: Utilizador)
  + registerNewUser(estado: String, type: String): Cliente
  + alterarDados()
  + realizarPedido()
  + consultarCompras()
}

class Tecnicos extends Utilizador {
  - NIF: String
  - morada: String
  - telefone: String
  + Tecnicos(login: String, password: String, nome: String, estado: String, email: String, tipo: String, NIF: String, morada: String, telefone: String)
  + getNIF(): String
  + getMorada(): String
  + getTelefone(): String
  + setMorada()
  + loggedUserLoop(user: Utilizador)
  + registerNewUser(estado: String, type: String): Tecnicos
  + alterarDados()
  +gerirEquipamentos()
  +gerirVendas()
  +processarPedido()
}

class Administrador extends Utilizador {
    +Administrador()
    +loggedUserLoop()
    +registerNewUser()
    +aprovarRegistros()
    +aprovarPedidos()
    +gerirVendas()
    +associarTecnico()
}

class Main {
        +main(String[] args)
        -mainLoop()
        +registerUser()
        +loginUser() Utilizador
        +pressEnterKey()
        +clearConsole()
    }

class Validator {
  - validators: Map<String, Function<String, Boolean>>
  + isValidEmail(email: String): boolean
  + isValidNIF(nif: String): boolean
  + isValidPhoneNumber(phoneNumber: String): boolean
  + isValidName(name: String): boolean
  + isValidLogin(login: String): boolean
  + isValidAddress(address: String): boolean
  + validatePassword(type: String): String
  + validateInput(typeString: String): String
  - encryptPassword(password: String): String
}

class Ficheiros {
  + doUsersExist()
  + insertUserFicehiro(user: Utilizador)
  + insertObjectFicheiro(user: Utilizador)
  + showObjectFileContents()
  + authenticateUser(login: String, password: String): Utilizador
  - getUserDetails(login: String): Utilizador
}

class Input {
  - scanner: Scanner
  - fileReader: BufferedReader
  - getScanner(): Scanner
  + readLine(): String
  + hasNextInt(): boolean
  + closeScanner()
  + openFIleReade(filename: String)
  + readFileLine(): String
  + closeFile()
}

class Sistema {
  -List~Utilizador~ utilizadores
  -List~Servico~ servicos
  -List~Equipamento~ equipamentos
  +getInstance()
  +Sistema()
  +save()
  +adicionarUtilizador()
  +adicionarServico()
  +adicionarEquipamento()
  +getUtilizadores()
  +carregarDados()
  +autenticarUtilizador()
}
class Servico {
        -int codigo
        -Date dataPedido
        -String descricao
        -EstadoServico estado
        -double tempoProcessamento
        -double valorTotal
        -List~Equipamento~ equipamentos
        -Map~Equipamento, Integer~ quantidades
        +calcularValorTotal()
        +adicionarEquipamento()
        +concluirServico()
}

class Equipamento {
    -String marca
    -String modelo
    -String codigoInterno
    -Serie serie
    -Versao versao
    -double voltagem
    -int quantidadeStock
    -double precoVenda
    -String observacoes
    -boolean isOEM
    -List~Fornecedor~ fornecedores
    -List~Categoria~ categorias
    +atualizarStock()
    +adicionarFornecedor()
    +adicionarCategoria()
}

class Fornecedor {
    -String nome
    -String morada
    -String telefone
}

class Categoria {
    -String designacao
    -String familia
}

class Serie {
    -int geracao
    -int sequencia
}

class Versao {
    -int unidade
    -int valorAlfa
    -int valorBeta
}

Sistema -- Utilizador
Sistema -- Servico
Sistema -- Equipamento
Sistema --> Ficheiros
Main -- Ficheiros
Main -- Input
Main -- Validator
Tecnicos --> Validator
Cliente --> Validator
Administrador --> Validator
Ficheiros --> Utilizador
Validator --> Input
Ficheiros --> Input
Utilizador --> Input
Equipamento -- Fornecedor
Equipamento -- Categoria
Equipamento -- Serie
Equipamento -- Versao
Cliente -- Servico
Tecnicos -- Servico
Servico -- Equipamento

